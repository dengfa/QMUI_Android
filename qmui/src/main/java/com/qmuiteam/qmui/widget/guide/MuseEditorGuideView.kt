package com.qmuiteam.qmui.widget.guideimport android.content.Contextimport android.util.AttributeSetimport android.view.LayoutInflaterimport android.widget.FrameLayoutimport android.view.Viewimport com.qmuiteam.qmui.Rimport kotlinx.android.synthetic.main.layout_muse_guide.view.*class MuseEditorGuideView @JvmOverloads constructor(context: Context, attrs: AttributeSet? = null, defStyleAttr: Int = 0) : FrameLayout(context, attrs, defStyleAttr) {    private val targetViews = arrayListOf<View>()    private var step: Int = -1    init {        LayoutInflater.from(context).inflate(R.layout.layout_muse_guide, this, true)    }    private fun resetTarget(targetView: View) {        guideCover?.resetTarget(targetView)        splitTips.visibility = if (step == 0) View.VISIBLE else View.GONE        cutTips.visibility = if (step == 1) View.VISIBLE else View.GONE        lottieCutTips.visibility = if (step == 1) View.VISIBLE else View.GONE        reOrderTips.visibility = if (step == 2) View.VISIBLE else View.GONE        tagTips.visibility = if (step == 3) View.VISIBLE else View.GONE        trackPanel.visibility = if (step == 0) View.GONE else View.VISIBLE    }    fun hide() {        visibility = View.GONE    }    fun show(targets: List<View>) {        if (targets.isEmpty()) return        initTipsView()        step = -1        targetViews.clear()        targetViews.addAll(targets)        visibility = View.VISIBLE        next()    }    private fun initTipsView() {        splitTips.setTips("分割",            "选中“片段”后点击，将片段分割为多个",            "1/4",            "",            "",            "下一步",            {},            { next() })        cutTips.setTips("素材截取",            "拖动素材截取把手设置视频时长",            "2/4",            "",            "上一步",            "下一步",            { pre() },            { next() })        reOrderTips.setTips("排序",            "长按“片段”可移动视频的顺序",            "3/4",            "guide/tips_order.json",            "上一步",            "下一步",            { pre() },            { next() })        tagTips.setTips("标记",            "点击快速定位标记位置",            "4/4",            "guide/tips_order.json",            "上一步",            "完成",            { pre() },            { hide() })    }    private fun next() {        if (step == targetViews.size - 1) return        step++        val targetView = targetViews[step % (targetViews.size)]        resetTarget(targetView)    }    private fun pre() {        if (step == 0) return        step--        val targetView = targetViews[step % (targetViews.size)]        resetTarget(targetView)    }}